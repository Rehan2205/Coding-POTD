class Solution {
public:
    int solve(int i, int j, int n, int m, vector<vector<int>>& dungeon,
    vector<vector<int>> &dp){
        if(i > n || j > m) return INT_MAX;
        if(i == n && j == m) return max(1, 1 - dungeon[i][j]);
        if(dp[i][j] != -1) return dp[i][j];
        int right = solve(i, j + 1, n, m, dungeon, dp);
        int down = solve(i + 1, j, n, m, dungeon, dp);
        return dp[i][j] = max(1, min(right, down) - dungeon[i][j]);
    }

    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        int n = dungeon.size();
        int m = dungeon[0].size();
        vector<vector<int>> dp(n, vector<int> (m, -1));
        return solve(0, 0, n - 1, m - 1, dungeon, dp);
    }
};
